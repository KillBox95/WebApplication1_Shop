// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20230121061929_Zakazy")]
    partial class Zakazy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication1.Data.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("catogoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Korzina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ShopTovarId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tovarid")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Tovarid");

                    b.ToTable("Korzina");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Tovar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.Property<int>("categoryName")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFavorite")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryID");

                    b.ToTable("Tovar");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Zakaz", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("zakazTime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Zakazs");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.ZakazDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<long>("price")
                        .HasColumnType("bigint");

                    b.Property<int>("tovarId")
                        .HasColumnType("int");

                    b.Property<int>("zakazId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tovarId");

                    b.HasIndex("zakazId");

                    b.ToTable("ZakazDetail");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Korzina", b =>
                {
                    b.HasOne("WebApplication1.Data.Models.Tovar", "Tovar")
                        .WithMany()
                        .HasForeignKey("Tovarid");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Tovar", b =>
                {
                    b.HasOne("WebApplication1.Data.Models.Category", "Category")
                        .WithMany("tovar")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.ZakazDetail", b =>
                {
                    b.HasOne("WebApplication1.Data.Models.Tovar", "tovar")
                        .WithMany()
                        .HasForeignKey("tovarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Data.Models.Zakaz", "zakaz")
                        .WithMany("zakazDetail")
                        .HasForeignKey("zakazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tovar");

                    b.Navigation("zakaz");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Category", b =>
                {
                    b.Navigation("tovar");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Zakaz", b =>
                {
                    b.Navigation("zakazDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
